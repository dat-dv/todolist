version: "3.8"

services:
  mysql:
    image: mysql:8.0
    container_name: todolist_mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-todolist}
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - todolist_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  backend:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: todolist_backend
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT:-Production}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - JWT_KEY=${JWT_KEY}
      - JWT_ISSUER=${JWT_ISSUER}
      - JWT_AUDIENCE=${JWT_AUDIENCE}
      - JWT_EXPIRATION_HOURS=${JWT_EXPIRATION_HOURS}
      - AUTO_MIGRATE=${AUTO_MIGRATE}
      - ConnectionStrings__DefaultConnection=Server=mysql;Port=3306;Database=${MYSQL_DATABASE};User=root;Password=${MYSQL_ROOT_PASSWORD};
    ports:
      - "${BACKEND_PORT:-5000}:8080"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - todolist_network

  frontend:
    build:
      context: ./ui
      dockerfile: Dockerfile
    container_name: todolist_frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - todolist_network
    restart: unless-stopped

volumes:
  mysql_data:

networks:
  todolist_network:
    driver: bridge
